<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - VIDYASAARATHI</title>
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Arial, sans-serif;
        }
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(45deg, #e0e7ff, #f0f2f5, #e1e7f0, #d1e7dd);
            background-size: 400%;
            animation: gradient 15s ease infinite;
        }
        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            width: 100%;
            max-width: 400px;
            animation: fadeIn 0.5s ease-in;
            position: relative;
            transition: opacity 0.3s;
        }
        .container.submitting {
            opacity: 0.7;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        h2 {
            text-align: center;
            color: #1a1a1a;
            margin-bottom: 20px;
            font-size: 24px;
            font-weight: 600;
        }
        .form-group {
            margin-bottom: 20px;
            position: relative;
        }
        label {
            position: absolute;
            top: 12px;
            left: 12px;
            color: #555;
            font-size: 16px;
            transition: all 0.2s ease;
            pointer-events: none;
        }
        input:focus + label,
        input:not(:placeholder-shown) + label {
            top: -10px;
            left: 10px;
            font-size: 12px;
            color: #333;
            background: white;
            padding: 0 5px;
        }
        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        input:focus {
            outline: none;
            border-color: #1a1a1a;
            box-shadow: 0 0 8px rgba(26, 26, 26, 0.2);
        }
        input.valid {
            border-color: #2ecc71;
            background: #e8f7ee;
        }
        input.invalid {
            border-color: #d32f2f;
            animation: shake 0.3s;
        }
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        .password-toggle {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #555;
            font-size: 18px;
            transition: color 0.2s, transform 0.2s;
        }
        .password-toggle:hover {
            color: #1a1a1a;
            transform: translateY(-50%) scale(1.1);
        }
        .password-strength {
            margin-top: 8px;
            font-size: 12px;
            color: #555;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        .strength-bar {
            flex: 1;
            height: 5px;
            background: #ddd;
            border-radius: 5px;
            overflow: hidden;
        }
        .strength-bar div {
            height: 100%;
            transition: width 0.3s, background 0.3s;
        }
        .strength-weak { width: 33%; background: #d32f2f; }
        .strength-medium { width: 66%; background: #f1c40f; }
        .strength-strong { width: 100%; background: #2ecc71; }
        button {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #1a1a1a, #333);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
            position: relative;
            overflow: hidden;
        }
        button:hover {
            transform: scale(1.02);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }
        button:disabled {
            background: #999;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        .ripple {
            position: absolute;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transform: scale(0);
            animation: ripple 0.6s linear;
            pointer-events: none;
        }
        @keyframes ripple {
            to { transform: scale(4); opacity: 0; }
        }
        .loading::after {
            content: '';
            position: absolute;
            width: 24px;
            height: 24px;
            border: 4px solid #fff;
            border-top: 4px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            top: 50%;
            right: 12px;
            transform: translateY(-50%);
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .error {
            color: #d32f2f;
            text-align: center;
            margin-bottom: 15px;
            font-size: 14px;
            background: #ffebee;
            padding: 10px;
            border-radius: 5px;
            animation: slideInError 0.3s ease;
            position: relative;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .error .dismiss {
            cursor: pointer;
            font-size: 16px;
            color: #d32f2f;
        }
        @keyframes slideInError {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .success {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: #2ecc71;
            color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            display: none;
            flex-direction: column;
            align-items: center;
            animation: popIn 0.5s ease;
            z-index: 1000;
        }
        .success.show {
            display: flex;
        }
        .success .checkmark {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: white;
            position: relative;
            margin-bottom: 10px;
        }
        .success .checkmark::after {
            content: '';
            position: absolute;
            width: 15px;
            height: 30px;
            border: solid #2ecc71;
            border-width: 0 5px 5px 0;
            transform: rotate(45deg);
            top: 5px;
            left: 17px;
        }
        @keyframes popIn {
            from { transform: translate(-50%, -50%) scale(0.8); opacity: 0; }
            to { transform: translate(-50%, -50%) scale(1); opacity: 1; }
        }
        .link {
            text-align: center;
            margin-top: 15px;
            font-size: 14px;
            color: #555;
        }
        .link a {
            color: #1a1a1a;
            text-decoration: none;
            font-weight: bold;
            transition: color 0.3s;
        }
        .link a:hover {
            color: #007bff;
            text-decoration: underline;
        }
        @media (max-width: 480px) {
            .container {
                padding: 20px;
                margin: 10px;
            }
            h2 {
                font-size: 20px;
            }
            button {
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Sign Up for VIDYASAARATHI</h2>
        <% if (locals.error) { %>
            <p class="error"><%= error %> <i class="fas fa-times dismiss" aria-label="Dismiss error"></i></p>
        <% } %>
        <form id="signupForm" action="/signup" method="POST">
            <div class="form-group">
                <input type="text" id="username" name="username" placeholder=" " required autocomplete="username" aria-label="Username">
                <label for="username">Username</label>
            </div>
            <div class="form-group">
                <input type="email" id="email" name="email" placeholder=" " required autocomplete="email" aria-label="Email">
                <label for="email">Email</label>
            </div>
            <div class="form-group">
                <input type="password" id="password" name="password" placeholder=" " required autocomplete="new-password" aria-label="Password">
                <label for="password">Password</label>
                <i class="fas fa-eye password-toggle" id="togglePassword" aria-label="Show password" title="Show password"></i>
                <div class="password-strength">
                    <span id="strengthText">Password Strength: Weak</span>
                    <div class="strength-bar"><div id="strengthBar"></div></div>
                </div>
            </div>
            <button type="submit" id="submitBtn" aria-label="Sign Up">Sign Up</button>
        </form>
        <div class="success" id="successMessage">
            <div class="checkmark"></div>
            <p>Account Created Successfully!</p>
        </div>
        <div class="link">
            <p>Already have an account? <a href="/signin">Sign In</a></p>
        </div>
    </div>

    <script>
        const passwordInput = document.getElementById('password');
        const togglePassword = document.getElementById('togglePassword');
        const submitBtn = document.getElementById('submitBtn');
        const form = document.getElementById('signupForm');
        const usernameInput = document.getElementById('username');
        const emailInput = document.getElementById('email');
        const strengthText = document.getElementById('strengthText');
        const strengthBar = document.getElementById('strengthBar');
        const successMessage = document.getElementById('successMessage');

        // Toggle password visibility
        togglePassword.addEventListener('click', () => {
            const isPassword = passwordInput.type === 'password';
            passwordInput.type = isPassword ? 'text' : 'password';
            togglePassword.classList.toggle('fa-eye', isPassword);
            togglePassword.classList.toggle('fa-eye-slash', !isPassword);
            togglePassword.setAttribute('aria-label', isPassword ? 'Hide password' : 'Show password');
            togglePassword.setAttribute('title', isPassword ? 'Hide password' : 'Show password');
        });

        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            if (password.length >= 8) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[^A-Za-z0-9]/.test(password)) strength++;

            if (password.length === 0) {
                strengthText.textContent = 'Password Strength: Weak';
                strengthBar.className = '';
                return;
            }
            if (strength <= 2) {
                strengthText.textContent = 'Password Strength: Weak';
                strengthBar.className = 'strength-weak';
            } else if (strength === 3) {
                strengthText.textContent = 'Password Strength: Medium';
                strengthBar.className = 'strength-medium';
            } else {
                strengthText.textContent = 'Password Strength: Strong';
                strengthBar.className = 'strength-strong';
                passwordInput.classList.add('valid');
            }
        }

        // Real-time input validation
        usernameInput.addEventListener('input', () => {
            const value = usernameInput.value.trim();
            if (value.length >= 3) {
                usernameInput.classList.add('valid');
                usernameInput.classList.remove('invalid');
            } else {
                usernameInput.classList.remove('valid');
                usernameInput.classList.add('invalid');
            }
        });

        emailInput.addEventListener('input', () => {
            const value = emailInput.value.trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (emailRegex.test(value)) {
                emailInput.classList.add('valid');
                emailInput.classList.remove('invalid');
            } else {
                emailInput.classList.remove('valid');
                emailInput.classList.add('invalid');
            }
        });

        passwordInput.addEventListener('input', () => {
            const value = passwordInput.value.trim();
            checkPasswordStrength(value);
            if (value.length >= 8) {
                passwordInput.classList.add('valid');
                passwordInput.classList.remove('invalid');
            } else {
                passwordInput.classList.remove('valid');
                passwordInput.classList.add('invalid');
            }
        });

        // Ripple effect on button click
        submitBtn.addEventListener('click', (e) => {
            const rect = submitBtn.getBoundingClientRect();
            const ripple = document.createElement('span');
            ripple.classList.add('ripple');
            const size = Math.max(rect.width, rect.height);
            ripple.style.width = ripple.style.height = `${size}px`;
            ripple.style.left = `${e.clientX - rect.left - size / 2}px`;
            ripple.style.top = `${e.clientY - rect.top - size / 2}px`;
            submitBtn.appendChild(ripple);
            setTimeout(() => ripple.remove(), 600);
        });

        // Dismiss error message
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('dismiss')) {
                e.target.parentElement.style.animation = 'slideOutError 0.3s ease forwards';
                setTimeout(() => e.target.parentElement.remove(), 300);
            }
        });

        // Form submission handling
        form.addEventListener('submit', async (e) => {
            const username = usernameInput.value.trim();
            const email = emailInput.value.trim();
            const password = passwordInput.value.trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!username || username.length < 3) {
                e.preventDefault();
                usernameInput.classList.add('invalid');
                alert('Username must be at least 3 characters long');
                return;
            }
            if (!email || !emailRegex.test(email)) {
                e.preventDefault();
                emailInput.classList.add('invalid');
                alert('Please enter a valid email address');
                return;
            }
            if (!password || password.length < 8) {
                e.preventDefault();
                passwordInput.classList.add('invalid');
                alert('Password must be at least 8 characters long');
                return;
            }

            submitBtn.disabled = true;
            submitBtn.classList.add('loading');
            submitBtn.textContent = 'Signing Up...';
            document.querySelector('.container').classList.add('submitting');
        });

        // Reset form state on page load if error exists
        window.addEventListener('load', () => {
            if (document.querySelector('.error')) {
                submitBtn.disabled = false;
                submitBtn.classList.remove('loading');
                submitBtn.textContent = 'Sign Up';
            }
        });
    </script>
</body>
</html>